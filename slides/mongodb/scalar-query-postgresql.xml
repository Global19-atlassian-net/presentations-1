HSTORE:

hstore -> text 	get value for key (NULL if not present) 	'a=>x, b=>y'::hstore -> 'a' 	x
hstore -> text[] 	get values for keys (NULL if not present) 	'a=>x, b=>y, c=>z'::hstore -> ARRAY['c','a'] 	{"z","x"}
hstore || hstore 	concatenate hstores 	'a=>b, c=>d'::hstore || 'c=>x, d=>q'::hstore 	"a"=>"b", "c"=>"x", "d"=>"q"
hstore ? text 	does hstore contain key? 	'a=>1'::hstore ? 'a' 	t
hstore ?& text[] 	does hstore contain all specified keys? 	'a=>1,b=>2'::hstore ?& ARRAY['a','b'] 	t
hstore ?| text[] 	does hstore contain any of the specified keys? 	'a=>1,b=>2'::hstore ?| ARRAY['b','c'] 	t
hstore @> hstore 	does left operand contain right? 	'a=>b, b=>1, c=>NULL'::hstore @> 'b=>1' 	t
hstore <@ hstore 	is left operand contained in right? 	'a=>c'::hstore <@ 'a=>b, b=>1, c=>NULL' 	f
hstore - text 	delete key from left operand 	'a=>1, b=>2, c=>3'::hstore - 'b'::text 	"a"=>"1", "c"=>"3"
hstore - text[] 	delete keys from left operand 	'a=>1, b=>2, c=>3'::hstore - ARRAY['a','b'] 	"c"=>"3"
hstore - hstore 	delete matching pairs from left operand 	'a=>1, b=>2, c=>3'::hstore - 'a=>4, b=>2'::hstore 	"a"=>"1", "c"=>"3"
record #= hstore 	replace fields in record with matching values from hstore 	see Examples section 	 
%% hstore 	convert hstore to array of alternating keys and values 	%% 'a=>foo, b=>bar'::hstore 	{a,foo,b,bar}
%# hstore 	convert hstore to two-dimensional key/value array 	%# 'a=>foo, b=>bar'::hstore 	{{a,foo},{b,bar}}



Check for a specific key in hstore column

You can check for a specific key in an hstore column using the ? operator in the WHERE clause. For example, the following statement returns all rows with attr contains publisher key.
1
2
3
4
5
6
7
8
	
SELECT
  title,
  attr->'publisher' as publisher,
  attr
FROM
 books
WHERE
 attr ? 'publisher';

postgesql hstore check key
Check for a key-value pair

You can query based on hstore key-value pair using the @> operator. The following statement retrieves all rows which attr column contains a key-value pair that matches "weight"=>"11.2 ounces".
1
2
3
4
5
6
	
SELECT
 title
FROM
 books
WHERE
 attr @> '"weight"=>"11.2 ounces"' :: hstore;

postgresql hstore check key-pair
Query rows that contain multiple specified keys

You can query the rows whose hstore column contain multiple keys using ?& operator. For example, you can get books where attr column contains both language and weight keys.
1
2
3
4
5
6
	
SELECT
 title
FROM
 books
WHERE
 attr ?& ARRAY [ 'language', 'weight' ];

postgresql hstore check multiple keys

To check if a row whose hstore column contains any key you use the ?| operator instead of the ?& operator.
Get all keys from a hstore column

To get all keys from an hstore column, you use the akeys() function as follows:
1
2
3
4
	
SELECT
 akeys (attr)
FROM
 books;

postgresql hstore akeys function

Or you can use the  skey() function if you want PostgreSQL to return the result as a set.
1
2
3
4
	
SELECT
 skeys (attr)
FROM
 books;

postgresql hstore skeys function
Get all values from an hstore column

Like keys, you can get all values from an hstore column using the  avals() function in the form of arrays.
1
2
3
4
	
SELECT
 avals (attr)
FROM
 books;

postgresql hstore avals function

Or you can use the  svals() function if you want to get the result as a set.
1
2
3
4
	
SELECT
 svals (attr)
FROM
 books;

postgresql hstore svals
Convert hstore data to JSON

PostgreSQL provides the hstore_to_json() function to convert hstore data to JSON. See the following statement:
1
2
3
4
5
	
SELECT
  title,
  hstore_to_json (attr) json
FROM
  books;

postgresql hstore to json
Convert hstore data to sets

To convert hstore data to sets, you use the  each() function as follows:
1
2
3
4
5
	
SELECT
 title,
 (EACH(attr) ).*
FROM
 books;







