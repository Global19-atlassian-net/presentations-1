<slide title="PHP 7" section="php7">

<break lines="1" />
<blurb fontsize="1.1em" align="left">✔ engine improvements</blurb>
<list>
<bullet fontsize="1em" type="none">100%+ performance gain on most real-world applications</bullet>
<bullet fontsize="1em" type="none">Lower memory usage</bullet>
<bullet fontsize="1em" type="none">Native thread local storage</bullet>
</list>
<break lines="1" section="php7ast"/>
<blurb fontsize="1.1em" align="left">✔ Abstract Syntax Tree</blurb>

<blurb fontsize="1.1em" align="left">✔ Return Types</blurb>
<example fontsize="1.1em" result='0' title=""><![CDATA[
<?php
function get_config(): array {
    return 42;
}
get_config();

// Catchable fatal error: Return value of get_config() must
//  be of the type array, integer returned in %s on line %d
]]></example>

<break lines="1" section="php7coalesce"/>
<blurb fontsize="1.1em" align="left">✔ Null Coalesce Operator</blurb>
<example fontsize="1.5em" result='0' title=""><![CDATA[
<?php
$a = NULL;
$b = 1;
$c = 2;

echo $a ?? $b; // 1
echo $c ?? $b; // 2
echo $a ?? $b ?? $c; // 1
echo $a ?? $x ?? $c; // 2
]]></example>

<break lines="1" section="php7cleanups"/>
<blurb fontsize="1.1em" align="left">✔ Removal of many deprecated featuresBR/
     (Your PHP4 code will break!)</blurb>
<example result='0' title=""><![CDATA[
- ext/ereg (use ext/pcre instead)
- ext/mysql (use ext/mysqli or ext/pdo_mysql instead)
- Assignment of new by reference
- Scoped calls of non-static methods from incompatible $this context

- dl() in php-fpm
- set_magic_quotes_runtime() and magic_quotes_runtime()
- set_socket_blocking() (use stream_set_blocking() instead)
- mcrypt_generic_end() (use mcrypt_generic_deinit() instead)
- mcrypt_ecb, mcrypt_cbc, mcrypt_cfb and mcrypt_ofb 
  (use mcrypt_encrypt() and mcrypt_decrypt() instead)
- datefmt_set_timezone_id() and IntlDateFormatter::setTimeZoneID() 
  (use datefmt_set_timezone() or IntlDateFormatter::setTimeZone() instead)

- xsl.security_prefs (use XsltProcessor::setSecurityPrefs() instead)
- iconv.input_encoding, iconv.output_encoding, iconv.internal_encoding,
  mbstring.http_input, mbstring.http_output and mbstring.internal_encoding
  (use php.input_encoding, php.internal_encoding and php.output_encoding instead)

- $is_dst parameter of the mktime() and gmmktime() functions
- # style comments in ini files (use ; style comments instead)
- String category names in setlocale() (use LC_* constants instead)
- Unsafe curl file uploads (use CurlFile instead)
- preg_replace() eval modifier (use preg_replace_callback() instead)
- PDO::PGSQL_ATTR_DISABLE_NATIVE_PREPARED_STATEMENT driver option 
  (use PDO::ATTR_EMULATE_PREPARES instead)
- CN_match and SNI_server_name stream context option (use peer_name instead)
]]></example>


<break lines="1" section="php7nonobject"/>

<blurb fontsize="1.1em" align="left">✔ 64-bit integer support on Windows</blurb>

<blurb fontsize="1.1em" align="left">✔ Cleanup edge-case integer overflow/underflow</blurb>

<blurb fontsize="1.1em" align="left">✔ Catchable &quot;call to member function of non-object&quot;</blurb>
<example result='0' title=""><![CDATA[
$this->getAction()->invoke();
// PHP 5.5: Fatal error: Call to a member function invoke() on a non-object in file on line N
// PHP 5.6: Fatal error: Call to a member function invoke() on null in file on line N
// PHP 7.0: Catchable fatal error: Call to a member function invoke() on null in file on line N
]]></example>

<break lines="1" section="php7UVS"/>

<blurb fontsize="1.1em" align="left">✔ Uniform variable syntax</blurb>

<example result='0' title=""><![CDATA[
<?php
// support missing combinations of operations
$foo()['bar']()
[$obj1, $obj2][0]->prop
getStr(){0}
 
// support nested ::
$foo['bar']::$baz
$foo::$bar::$baz
$foo->bar()::baz()
 
// support nested ()
foo()()
$foo->bar()()
Foo::bar()()
$foo()()
 
// support operations on arbitrary (...) expressions
(...)['foo']
(...)->foo
(...)->foo()
(...)::$foo
(...)::foo()
(...)()
 
// two more practical examples for the last point
(function() { ... })()
($obj->closure)()
 
// support all operations on dereferencable scalars
// (not very useful)
"string"->toLower()
[$obj, 'method']()
'Foo'::$bar
]]></example>

<break lines="1" section="php7unicode"/>

<blurb fontsize="1.1em" align="left">✔  Unicode Codepoint Escape Syntax</blurb>
<example fontsize="1.2em" result='1' title=""><![CDATA[
<?php
echo "\u{202E}Right-to-left text";

echo "\u{1F602}";
]]></example>

<blurb fontsize="1.1em" align="left">✔ ICU IntlChar class added to intl extension</blurb>

<break lines="1" section="php7more"/>

<blurb fontsize="1.5em">More things will be added</blurb>

<blurb fontsize="1.5em">First RC scheduled for June 2015</blurb>

</slide>
