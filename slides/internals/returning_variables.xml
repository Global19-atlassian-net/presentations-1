<slide>
<title>Returning Values</title>
<blurb>Scalar:</blurb>
<example><![CDATA[
#define RETVAL_BOOL(b)                  ZVAL_BOOL(return_value, b)
#define RETVAL_NULL()                   ZVAL_NULL(return_value)
#define RETVAL_LONG(l)                  ZVAL_LONG(return_value, l)
#define RETVAL_DOUBLE(d)                ZVAL_DOUBLE(return_value, d)
#define RETVAL_STRING(s, duplicate)         ZVAL_STRING(return_value, s, duplicate)
#define RETVAL_STRINGL(s, l, duplicate)     ZVAL_STRINGL(return_value, s, l, duplicate)
#define RETVAL_EMPTY_STRING()           ZVAL_EMPTY_STRING(return_value)
#define RETVAL_ZVAL(zv, copy, dtor)     ZVAL_ZVAL(return_value, zv, copy, dtor)
#define RETVAL_FALSE                    ZVAL_BOOL(return_value, 0)
#define RETVAL_TRUE                     ZVAL_BOOL(return_value, 1)

+ RETURN_* versions of all of them.
]]></example>
<break/>
<example><![CDATA[PHP_METHOD(DbusObjectPath, getData)
{
    zval *object;
    php_dbus_object_path_obj *object_path_obj;

    if (FAILURE == zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(),
        "O", &object, dbus_ce_dbus_object_path)) {
        RETURN_FALSE;
    }
    object_path_obj = (php_dbus_object_path_obj *) zend_object_store_get_object(object TSRMLS_CC);

    RETURN_STRING(object_path_obj->path, 1);
}]]></example>

</slide>
